[33mcommit 54d45d6296294758d8423df336508f5bc7d41ee0[m
Author: akkidg <akashg@zabuzalabs.com>
Date:   Fri Jul 22 15:00:03 2016 +0530

    first commit

[1mdiff --git a/Procfile.txt b/Procfile.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..5ec9cc2[m
[1m--- /dev/null[m
[1m+++ b/Procfile.txt[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mweb: node index.js[m
\ No newline at end of file[m
[1mdiff --git a/chat.js b/chat.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c1dd57f[m
[1m--- /dev/null[m
[1m+++ b/chat.js[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32mvar socket = io('http://test-ag-chat-app.herokuapp.com/');[m
[32m+[m
[32m+[m[32mfunction submitfunction(){[m
[32m+[m	[32mvar user = $('#userName').val();[m
[32m+[m	[32mvar msg = $('#m').val();[m
[32m+[m	[32mvar id = $('#userId').val();[m
[32m+[m	[32m//alert("I am an alert box!");[m
[32m+[m	[32mif(msg != ''){[m
[32m+[m		[32m$('#messages').append('<li><b style="color:green"> Me: </b>' + msg +' </li>');[m
[32m+[m		[32msocket.emit('chatMessage',msg,id);[m
[32m+[m	[32m}[m
[32m+[m	[32m$('#m').val('').focus();[m
[32m+[m	[32mreturn false;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction notifyTyping(){[m
[32m+[m	[32m//alert('typing user'+user);[m
[32m+[m	[32msocket.emit('typing');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32msocket.on('systemMessage',function(jsonText){[m[41m	[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(jsonText));[m[41m	[m
[32m+[m	[32m$('#messages').append('<li>' + obj.message + ' </li>');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32msocket.on('login',function(numUsers){[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(numUsers));[m
[32m+[m	[32m$('#messages').append('<li>' + obj.numUsers + ' participants.</li>');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32msocket.on('addUser',function(jsonText){[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(jsonText));[m
[32m+[m	[32mvar user = obj.username;[m
[32m+[m	[32mvar numUsers  = obj.numUsers;[m
[32m+[m	[32m$('#messages').append('<li><b style="color:#009afd">' + user + '</b> joined room.</li>');[m[41m	[m
[32m+[m	[32m$('#messages').append('<li>' + numUsers + '</b> participants.</li>');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32msocket.on('typing',function(jsonText){[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(jsonText));[m
[32m+[m	[32mvar user = obj.username;[m
[32m+[m	[32m$('#notifyUser').text(user + ' is typing...');[m
[32m+[m	[32msetTimeout(function(){$('#notifyUser').text('');},10000);[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32msocket.on('directMessage',function(jsonText){[m
[32m+[m	[32mvar me = $('#userName').val();[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(jsonText));[m
[32m+[m	[32mvar from = obj.username;[m
[32m+[m	[32mvar msg = obj.message;[m
[32m+[m	[32m$('#messages').append('<li><b style="color:#009afd">' + from + '</b>:' + msg + '</li>');[m[41m	[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32msocket.on('userLeft',function(jsonText){[m
[32m+[m	[32mvar obj = JSON.parse(JSON.stringify(jsonText));[m
[32m+[m	[32mvar user = obj.username;[m
[32m+[m	[32mvar numUsers  = obj.numUsers;[m
[32m+[m	[32m$('#messages').append('<li><b style="color:#009afd">' + user + '</b> left room.</li>');[m[41m	[m
[32m+[m	[32m$('#messages').append('<li>' + numUsers + '</b> participants.</li>');[m[41m	[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m$(document).ready(function(){[m
[32m+[m	[32mvar id = 1;[m[41m		[m
[32m+[m	[32m//alert(name);[m
[32m+[m	[32mvar name = prompt("What's Your Name?");[m
[32m+[m	[32m$('#userId').val(id);[m
[32m+[m	[32m$('#userName').val(name);[m[41m	[m
[32m+[m
[32m+[m	[32m$('#messages').append('<li> Welcome ' + name + ' </li>');[m
[32m+[m	[32msocket.emit('addUser',name,id);[m
[32m+[m	[32m//socket.emit('chatMessage','System','<b>' + name + '</b> has joined discussion.');[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// create new User Id[m
[32m+[m[32mfunction makeid() {[m
[32m+[m[32m  var text = "";[m
[32m+[m[32m  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";[m
[32m+[m[41m [m
[32m+[m[32m  for( var i=0; i < 5; i++ ) {[m
[32m+[m[32m    text += possible.charAt(Math.floor(Math.random() * possible.length));[m
[32m+[m[32m  }[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[1mdiff --git a/index.html b/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..5b946d1[m
[1m--- /dev/null[m
[1m+++ b/index.html[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<!doctype html>[m
[32m+[m[32m  <html>[m
[32m+[m[32m   <head>[m
[32m+[m[32m    <title>Chat Application</title>[m
[32m+[m[32m    <link rel='stylesheet' href='http://test-ag-chat-app.herokuapp.com/style.css' type='text/css'/>[m[41m	[m
[32m+[m	[32m<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>[m
[32m+[m[32m    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>[m
[32m+[m[32m    <script type="text/javascript" src="http://test-ag-chat-app.herokuapp.com/chat.js"></script>[m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m[41m [m
[32m+[m[32m    <ul id="messages"></ul>[m
[32m+[m[32m    <span id="notifyUser"></span>[m
[32m+[m[32m    <form id="form" action="" onsubmit="return submitfunction();" >[m[41m [m
[32m+[m[32m      <input type="hidden" id="user" value="" /><input id="m" autocomplete="off" onkeyup="notifyTyping();" placeholder="Type yor message here.." /><input type="submit" id="button" value="Send"/>[m[41m [m
[32m+[m[32m    </form>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/index.js b/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..400c713[m
[1m--- /dev/null[m
[1m+++ b/index.js[m
[36m@@ -0,0 +1,257 @@[m
[32m+[m[32mvar app = require('express')();[m
[32m+[m[32mvar http = require('http').Server(app);[m
[32m+[m[32mvar io = require('socket.io')(http);[m
[32m+[m[32mvar path = require('path');[m
[32m+[m[32mvar port = process.env.PORT || 5000[m[41m	[m
[32m+[m[41m	[m
[32m+[m[32mvar numUsers = 0;[m
[32m+[m[32mvar dataJson, title, alert;[m
[32m+[m
[32m+[m[32m// storing UserSocket Id's globally[m
[32m+[m[32mvar userSocketIds = {};[m
[32m+[m
[32m+[m[32m// Storing Rooms in Global Array[m
[32m+[m[32mvar rooms = {};[m
[32m+[m
[32m+[m[32mapp.get('/',function(req,res){[m
[32m+[m	[32mvar express = require('express');[m
[32m+[m	[32mapp.use(express.static(path.join(__dirname)));[m[41m	[m
[32m+[m	[32mres.sendFile(path.join(__dirname,'index.html'));[m
[32m+[m[32m});[m
[32m+[m[41m	[m
[32m+[m[32mio.on('connection',function(socket){[m
[32m+[m
[32m+[m	[32mvar addedUser = false;[m[41m	[m
[32m+[m[41m	[m
[32m+[m	[32msocket.on('addUser',function(username,id){[m
[32m+[m		[32mif(addedUser) return;[m
[32m+[m
[32m+[m		[32msocket.username = username;[m
[32m+[m
[32m+[m		[32mif(userSocketIds[id] == null){[m
[32m+[m			[32muserSocketIds[id] = socket.id;[m[41m			[m
[32m+[m			[32m++numUsers;[m[41m				[m
[32m+[m			[32maddedUser = true;[m[41m			[m
[32m+[m			[32msocket.broadcast.emit('addUser',{username:socket.username,numUsers:numUsers});[m
[32m+[m		[32m}else{[m
[32m+[m			[32muserSocketIds[id] = socket.id;[m[41m	[m
[32m+[m		[32m}[m
[32m+[m[41m			[m
[32m+[m		[32msocket.emit('login',{[m
[32m+[m			[32mnumUsers:numUsers[m
[32m+[m		[32m});[m
[32m+[m		[32m//io.emit('systemMessage',"akash");[m[41m	[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32m// Event For User status updating (online,typing)[m
[32m+[m
[32m+[m	[32msocket.on('userStatus',function(sender,receiver){[m
[32m+[m		[32m//var socketId = ;[m
[32m+[m		[32m//var index = userSocketIds.indexOf(.toString());[m
[32m+[m
[32m+[m		[32mif(userSocketIds[receiver] != null){[m
[32m+[m			[32mtitle = 'status online';[m
[32m+[m			[32malert = {'status':9,'userStatus':1,'sender':sender};[m
[32m+[m			[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m			[32mio.to(userSocketIds[receiver]).emit('userStatus',dataJson);[m
[32m+[m		[32m}[m[41m			[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32msocket.on('typing',function(sender,receiver){[m
[32m+[m		[32m//var index = userSocketIds.indexOf(userSocketIds[receiver]);[m
[32m+[m
[32m+[m		[32mif(userSocketIds[receiver] != null){[m
[32m+[m			[32mtitle = 'user typing';[m
[32m+[m			[32malert = {'status':10,'sender':sender};[m
[32m+[m			[32mdataJson = {'title':title,'alert':alert};[m[41m			[m
[32m+[m			[32mio.to(userSocketIds[receiver]).emit('typing',dataJson);[m
[32m+[m		[32m}[m
[32m+[m	[32m});[m[41m	[m
[32m+[m
[32m+[m	[32msocket.on('stopTyping',function(sender,receiver){[m[41m			[m
[32m+[m		[32m//var index = userSocketIds.indexOf(userSocketIds[receiver]);[m
[32m+[m
[32m+[m		[32mif(userSocketIds[receiver] != null){[m[41m	[m
[32m+[m			[32mtitle = 'user stop typing';[m
[32m+[m			[32malert = {'status':11,'sender':sender};[m
[32m+[m			[32mdataJson = {'title':title,'alert':alert};[m[41m			[m
[32m+[m			[32mio.to(userSocketIds[receiver]).emit('typing',dataJson);[m
[32m+[m		[32m}[m
[32m+[m	[32m});[m[41m [m
[32m+[m
[32m+[m	[32m// Event For Direct Messaging[m
[32m+[m[41m		[m
[32m+[m	[32msocket.on('directMessage',function(msg,userId){[m
[32m+[m		[32mvar msgObj = JSON.parse(msg);[m[41m		[m
[32m+[m		[32mio.to(userSocketIds[userId]).emit('directMessage',msgObj);[m[41m			[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32m// Event For Group Messaging[m
[32m+[m
[32m+[m	[32msocket.on('groupMessage',function(message,groupName){[m
[32m+[m		[32mvar msgObj = JSON.parse(message);[m[41m	[m
[32m+[m		[32msocket.broadcast.to(groupName).emit('groupMessage',msgObj);[m
[32m+[m	[32m});[m
[32m+[m[41m				[m
[32m+[m	[32m// Events For Group Subscription[m
[32m+[m
[32m+[m	[32msocket.on('subscribe',function(groupName,totParticipant,from){[m
[32m+[m		[32m// room created by group name[m
[32m+[m		[32msocket.join(groupName);[m
[32m+[m
[32m+[m		[32mif(rooms[groupName] == null){[m
[32m+[m			[32mvar room = new Room(groupName,totParticipant);[m
[32m+[m			[32mvar player = new Player(userSocketIds[from],socket.username,true);[m
[32m+[m			[32mroom.addPlayer(player);[m
[32m+[m			[32mrooms[groupName] = room;[m
[32m+[m		[32m}else{[m
[32m+[m			[32mvar room = rooms[groupName];[m
[32m+[m			[32mvar isPlayerPresent = false;[m
[32m+[m			[32mfor(var player in room.players){[m
[32m+[m				[32mif(player.id == userSocketIds[from]){[m
[32m+[m					[32misPlayerPresent = true;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32mif(!isPlayerPresent){[m
[32m+[m				[32mvar player = new Player(userSocketIds[from],socket.username,false);[m
[32m+[m				[32mroom.addPlayer(player);[m[41m			[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m			[32mif(room.players.length == room.maxPlayer){[m
[32m+[m				[32mroom.startGame(socket);[m[41m		[m
[32m+[m			[32m}[m[41m		[m
[32m+[m		[32m}[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32msocket.on('unSubscribe',function(groupName,from){[m
[32m+[m		[32msocket.leave(groupName);[m
[32m+[m		[32mif(rooms[groupName] != null){[m
[32m+[m			[32mvar room = rooms[groupName];[m
[32m+[m			[32mfor(var i=0;i<room.players.length;i++){[m
[32m+[m				[32mplayer = room.players[i];[m[41m	[m
[32m+[m				[32mif(player.id == userSocketIds[from]){[m
[32m+[m					[32mroom.players.splice(i,1);[m
[32m+[m				[32m}[m[41m						[m
[32m+[m			[32m}[m[41m			[m
[32m+[m		[32m}[m
[32m+[m			[32mroom.stopRound(socket);[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32msocket.on('turnComplete',function(groupName){[m
[32m+[m		[32mvar player;[m
[32m+[m		[32mif(rooms[groupName] != null){[m
[32m+[m			[32mvar room = rooms[groupName];[m
[32m+[m			[32mfor(var i=0;i<room.players.length;i++){[m
[32m+[m				[32mplayer = room.players[i];[m
[32m+[m				[32mif(player.isTurn){[m
[32m+[m					[32mplayer.isTurn = false;[m
[32m+[m					[32mif(i == room.players.length - 1){[m
[32m+[m						[32mplayer = room.players[0];[m[41m	[m
[32m+[m						[32mplayer.isTurn = true;[m
[32m+[m					[32m}else{[m
[32m+[m						[32mplayer = room.players[++i];[m[41m	[m
[32m+[m						[32mplayer.isTurn = true;[m
[32m+[m					[32m}[m
[32m+[m					[32mbreak;[m
[32m+[m				[32m}[m[41m 				[m
[32m+[m			[32m}[m
[32m+[m			[32mroom.progressRound(socket);[m[41m	[m
[32m+[m		[32m}[m
[32m+[m	[32m});[m
[32m+[m
[32m+[m	[32m/*// Event For Start Conversation[m[41m [m
[32m+[m	[32msocket.on('startGame',function(groupName){[m
[32m+[m		[32mRoom room = rooms[groupName];[m
[32m+[m		[32mif(room != null){[m
[32m+[m			[32mroom.playStart = true;[m
[32m+[m			[32mroom.progressRound();[m[41m			[m
[32m+[m		[32m}[m[41m			[m
[32m+[m	[32m});*/[m
[32m+[m[41m	[m
[32m+[m	[32m// Event on Socket Disonnection[m
[32m+[m	[32msocket.on('disconnect',function(){[m
[32m+[m		[32mif(addedUser){[m
[32m+[m			[32m--numUsers;[m[41m	[m
[32m+[m			[32msocket.broadcast.emit('userLeft',{username:socket.username,numUsers: numUsers});[m[41m			[m
[32m+[m		[32m}[m
[32m+[m	[32m});[m
[32m+[m[41m	[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mhttp.listen(port,function(){[m
[32m+[m	[32mconsole.log('listening on ' + port);[m[41m	[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Javascript Prototyping Objects For Room, Players & Prototype Functions[m
[32m+[m
[32m+[m[32mfunction Room(room_name,maxPlayer){[m
[32m+[m	[32mthis.players = [];[m
[32m+[m	[32mthis.room_name = room_name;[m
[32m+[m	[32mthis.maxPlayer = maxPlayer;[m
[32m+[m	[32mthis.playStart = false;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction Player(player_id,name,isTurn){[m
[32m+[m	[32mthis.id = player_id;[m
[32m+[m	[32mthis.name = name;[m
[32m+[m	[32mthis.isTurn = isTurn;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mRoom.prototype.addPlayer = function(player){[m
[32m+[m	[32mthis.players.push(player);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mRoom.prototype.startGame = function(socket){[m
[32m+[m	[32mtitle = 'Round Started';[m
[32m+[m	[32malert = {'status':12,'isPlayStart':true};[m
[32m+[m	[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m
[32m+[m	[32m//socket.broadcast.to(this.room_name).emit('RoundStart',dataJson);[m
[32m+[m	[32mio.to(this.room_name).emit('gameStart',dataJson);[m
[32m+[m
[32m+[m	[32mfor(var i=0;i<this.players.length;i++){[m
[32m+[m		[32mif(this.players[i].isTurn){[m[41m			[m
[32m+[m			[32malert = {'status':13,'isMyTurn':true};[m
[32m+[m			[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m			[32mio.to(this.players[i].id).emit('turn',dataJson);[m[41m	[m
[32m+[m		[32m}[m[41m		[m
[32m+[m	[32m}[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mRoom.prototype.progressRound = function(socket){[m
[32m+[m	[32mtitle = 'Turn System';[m
[32m+[m	[32malert = {'status':13,'isMyTurn':false};[m
[32m+[m	[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m	[32msocket.broadcast.to(this.room_name).emit('turn',dataJson);[m
[32m+[m
[32m+[m	[32mfor(var i=0;i<this.players.length;i++){[m
[32m+[m		[32mif(this.players[i].isTurn){[m
[32m+[m			[32mtitle = 'Turn System';[m
[32m+[m			[32malert = {'status':13,'isMyTurn':true};[m
[32m+[m			[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m			[32mio.to(this.players[i].id).emit('turn',dataJson);[m[41m		[m
[32m+[m		[32m}else{[m[41m			[m
[32m+[m			[32mthis.players[i].isTurn = false;[m
[32m+[m		[32m}[m[41m		[m
[32m+[m	[32m}[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mRoom.prototype.stopRound = function(socket){[m
[32m+[m	[32mtitle = 'Game Stops';[m
[32m+[m	[32malert = {'status':14,'isGameStops':true};[m
[32m+[m	[32mdataJson = {'title':title,'alert':alert};[m
[32m+[m	[32msocket.broadcast.to(this.room_name).emit('gameStops',dataJson);[m
[32m+[m[32m};[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/node_modules/.bin/mime b/node_modules/.bin/mime[m
[1mnew file mode 100644[m
[1mindex 0000000..f309578[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/mime[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=`dirname "$0"`[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  "$basedir/node"  "$basedir/../mime/cli.js" "$@"[m
[32m+[m[32m  ret=$?[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  node  "$basedir/../mime/cli.js" "$@"[m
[32m+[m[32m  ret=$?[m
[32m+[m[32mfi[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/node_modules/.bin/mime.cmd b/node_modules/.bin/mime.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..8169562[m
[1m--- /dev/null[m
[1m+++ b/node_modules/.bin/mime.cmd[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m@IF EXIST "%~dp0\node.exe" ([m
[32m+[m[32m  "%~dp0\node.exe"  "%~dp0\..\mime\cli.js" %*[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  @SETLOCAL[m
[32m+[m[32m  @SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m  node  "%~dp0\..\mime\cli.js" %*[m
[32m+[m[32m)[m
\ No newline at end of file[m
[1mdiff --git a/node_modules/accepts/HISTORY.md b/node_modules/accepts/HISTORY.md[m
[1mnew file mode 100644[m
[1mindex 0000000..397636e[m
[1m--- /dev/null[m
[1m+++ b/node_modules/accepts/HISTORY.md[m
[36m@@ -0,0 +1,170 @@[m
[32m+[m[32m1.2.13 / 2015-09-06[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.6[m
[32m+[m[32m    - deps: mime-db@~1.18.0[m
[32m+[m
[32m+[m[32m1.2.12 / 2015-07-30[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.4[m
[32m+[m[32m    - deps: mime-db@~1.16.0[m
[32m+[m
[32m+[m[32m1.2.11 / 2015-07-16[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.3[m
[32m+[m[32m    - deps: mime-db@~1.15.0[m
[32m+[m
[32m+[m[32m1.2.10 / 2015-07-01[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.2[m
[32m+[m[32m    - deps: mime-db@~1.14.0[m
[32m+[m
[32m+[m[32m1.2.9 / 2015-06-08[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.1[m
[32m+[m[32m    - perf: fix deopt during mapping[m
[32m+[m
[32m+[m[32m1.2.8 / 2015-06-07[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.0[m
[32m+[m[32m    - deps: mime-db@~1.13.0[m
[32m+[m[32m  * perf: avoid argument reassignment & argument slice[m
[32m+[m[32m  * perf: avoid negotiator recursive construction[m
[32m+[m[32m  * perf: enable strict mode[m
[32m+[m[32m  * perf: remove unnecessary bitwise operator[m
[32m+[m
[32m+[m[32m1.2.7 / 2015-05-10[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.5.3[m
[32m+[m[32m    - Fix media type parameter matching to be case-insensitive[m
[32m+[m
[32m+[m[32m1.2.6 / 2015-05-07[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.11[m
[32m+[m[32m    - deps: mime-db@~1.9.1[m
[32m+[m[32m  * deps: negotiator@0.5.2[m
[32m+[m[32m    - Fix comparing media types with quoted values[m
[32m+[m[32m    - Fix splitting media types with quoted commas[m
[32m+[m
[32m+[m[32m1.2.5 / 2015-03-13[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.10[m
[32m+[m[32m    - deps: mime-db@~1.8.0[m
[32m+[m
[32m+[m[32m1.2.4 / 2015-02-14[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Support Node.js 0.6[m
[32m+[m[32m  * deps: mime-types@~2.0.9[m
[32m+[m[32m    - deps: mime-db@~1.7.0[m
[32m+[m[32m  * deps: negotiator@0.5.1[m
[32m+[m[32m    - Fix preference sorting to be stable for long acceptable lists[m
[32m+[m
[32m+[m[32m1.2.3 / 2015-01-31[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.8[m
[32m+[m[32m    - deps: mime-db@~1.6.0[m
[32m+[m
[32m+[m[32m1.2.2 / 2014-12-30[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.7[m
[32m+[m[32m    - deps: mime-db@~1.5.0[m
[32m+[m
[32m+[m[32m1.2.1 / 2014-12-30[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.5[m
[32m+[m[32m    - deps: mime-db@~1.3.1[m
[32m+[m
[32m+[m[32m1.2.0 / 2014-12-19[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.5.0[m
[32m+[m[32m    - Fix list return order when large accepted list[m
[32m+[m[32m    - Fix missing identity encoding when q=0 exists[m
[32m+[m[32m    - Remove dynamic building of Negotiator class[m
[32m+[m
[32m+[m[32m1.1.4 / 2014-12-10[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.4[m
[32m+[m[32m    - deps: mime-db@~1.3.0[m
[32m+[m
[32m+[m[32m1.1.3 / 2014-11-09[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.3[m
[32m+[m[32m    - deps: mime-db@~1.2.0[m
[32m+[m
[32m+[m[32m1.1.2 / 2014-10-14[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.9[m
[32m+[m[32m    - Fix error when media type has invalid parameter[m
[32m+[m
[32m+[m[32m1.1.1 / 2014-09-28[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.2[m
[32m+[m[32m    - deps: mime-db@~1.1.0[m
[32m+[m[32m  * deps: negotiator@0.4.8[m
[32m+[m[32m    - Fix all negotiations to be case-insensitive[m
[32m+[m[32m    - Stable sort preferences of same quality according to client order[m
[32m+[m
[32m+[m[32m1.1.0 / 2014-09-02[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * update `mime-types`[m
[32m+[m
[32m+[m[32m1.0.7 / 2014-07-04[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Fix wrong type returned from `type` when match after unknown extension[m
[32m+[m
[32m+[m[32m1.0.6 / 2014-06-24[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.7[m
[32m+[m
[32m+[m[32m1.0.5 / 2014-06-20[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m * fix crash when unknown extension given[m
[32m+[m
[32m+[m[32m1.0.4 / 2014-06-19[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * use `mime-types`[m
[32m+[m
[32m+[m[32m1.0.3 / 2014-06-11[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.6[m
[32m+[m[32m    - Order by specificity when quality is the same[m
[32m+[m
[32m+[m[32m1.0.2 / 2014-05-29[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Fix interpretation when header not in request[m
[32m+[m[32m  * deps: pin negotiator@0.4.5[m
[32m+[m
[32m+[m[32m1.0.1 / 2014-01-18[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Identity encoding isn't always acceptable[m
[32m+[m[32m  * deps: negotiator@~0.4.0[m
[32m+[m
[32m+[m[32m1.0.0 / 2013-12-27[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Genesis[m
[1mdiff --git a/node_modules/accepts/LICENSE b/node_modules/accepts/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..0616607[m
[1m--- /dev/null[m
[1m+++ b/node_modules/accepts/LICENSE[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m(The MIT License)[m
[32m+[m
[32m+[m[32mCopyright (c) 2014 Jonathan Ong <me@jongleberry.com>[m
[32m+[m[32mCopyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining[m
[32m+[m[32ma copy of this software and associated documentation files (the[m
[32m+[m[32m'Software'), to deal in the Software without restriction, including[m
[32m+[m[32mwithout limitation the rights to use, copy, modify, merge, publish,[m
[32m+[m[32mdistribute, sublicense, and/or sell copies of the Software, and to[m
[32m+[m[32mpermit persons to whom the Software is furnished to do so, subject to[m
[32m+[m[32mthe following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be[m
[32m+[m[32mincluded in all copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,[m
[32m+[m[32mEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF[m
[32m+[m[32mMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.[m
[32m+[m[32mIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY[m
[32m+[m[32mCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,[m
[32m+[m[32mTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE[m
[32m+[m[32mSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.[m
[1mdiff --git a/node_modules/accepts/README.md b/node_modules/accepts/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..ae36676[m
[1m--- /dev/null[m
[1m+++ b/node_modules/accepts/README.md[m
[36m@@ -0,0 +1,135 @@[m
[32m+[m[32m# accepts[m
[32m+[m
[32m+[m[32m[![NPM Version][npm-image]][npm-url][m
[32m+[m[32m[![NPM Downloads][downloads-image]][downloads-url][m
[32m+[m[32m[![Node.js Version][node-version-image]][node-version-url][m
[32m+[m[32m[![Build Status][travis-image]][travis-url][m
[32m+[m[32m[![Test Coverage][coveralls-image]][coveralls-url][m
[32m+[m
[32m+[m[32mHigher level content negotiation based on [negotiator](https://www.npmjs.com/package/negotiator). Extracted from [koa](https://www.npmjs.com/package/koa) for general use.[m
[32m+[m
[32m+[m[32mIn addition to negotiator, it allows:[m
[32m+[m
[32m+[m[32m- Allows types as an array or arguments list, ie `(['text/html', 'application/json'])` as well as `('text/html', 'application/json')`.[m
[32m+[m[32m- Allows type shorthands such as `json`.[m
[32m+[m[32m- Returns `false` when no types match[m
[32m+[m[32m- Treats non-existent headers as `*`[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32mnpm install accepts[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## API[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mvar accepts = require('accepts')[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### accepts(req)[m
[32m+[m
[32m+[m[32mCreate a new `Accepts` object for the given `req`.[m
[32m+[m
[32m+[m[32m#### .charset(charsets)[m
[32m+[m
[32m+[m[32mReturn the first accepted charset. If nothing in `charsets` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .charsets()[m
[32m+[m
[32m+[m[32mReturn the charsets that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .encoding(encodings)[m
[32m+[m
[32m+[m[32mReturn the first accepted encoding. If nothing in `encodings` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .encodings()[m
[32m+[m
[32m+[m[32mReturn the encodings that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .language(languages)[m
[32m+[m
[32m+[m[32mReturn the first accepted language. If nothing in `languages` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .languages()[m
[32m+[m
[32m+[m[32mReturn the languages that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .type(types)[m
[32m+[m
[32m+[m[32mReturn the first accepted type (and it is returned as the same text as what[m
[32m+[m[32mappears in the `types` array). If nothing in `types` is accepted, then `false`[m
[32m+[m[32mis returned.[m
[32m+[m
[32m+[m[32mThe `types` array can contain full MIME types or file extensions. Any value[m
[32m+[m[32mthat is not a full MIME types is passed to `require('mime-types').lookup`.[m
[32m+[m
[32m+[m[32m#### .types()[m
[32m+[m
[32m+[m[32mReturn the types that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m## Examples[m
[32m+[m
[32m+[m[32m### Simple type negotiation[m
[32m+[m
[32m+[m[32mThis simple example shows how to use `accepts` to return a different typed[m
[32m+[m[32mrespond body based on what the client wants to accept. The server lists it's[m
[32m+[m[32mpreferences in order and will get back the best match between the client and[m
[32m+[m[32mserver.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mvar accepts = require('accepts')[m
[32m+[m[32mvar http = require('http')[m
[32m+[m
[32m+[m[32mfunction app(req, res) {[m
[32m+[m[32m  var accept = accepts(req)[m
[32m+[m
[32m+[m[32m  // the order of this list is significant; should be server preferred order[m
[32m+[m[32m  switch(accept.type(['json', 'html'])) {[m
[32m+[m[32m    case 'json':[m
[32m+[m[32m      res.setHeader('Content-Type', 'application/json')[m
[32m+[m[32m      res.write('{"hello":"world!"}')[m
[32m+[m[32m      break[m
[32m+[m[32m    case 'html':[m
[32m+[m[32m      res.setHeader('Content-Type', 'text/html')[m
[32m+[m[32m      res.write('<b>hello, world!</b>')[m
[32m+[m[32m      break[m
[32m+[m[32m    default:[m
[32m+[m[32m      // the fallback is text/plain, so no need to specify it above[m
[32m+[m[32m      res.setHeader('Content-Type', 'text/plain')[m
[32m+[m[32m      res.write('hello, world!')[m
[32m+[m[32m      break[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  res.end()[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mhttp.createServer(app).listen(3000)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can test this out with the cURL program:[m
[32m+[m[32m```sh[m
[32m+[m[32mcurl -I -H'Accept: text/html' http://localhost:3000/[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32m[MIT](LICENSE)[m
[32m+[m
[32m+[m[32m[npm-image]: https://img.shields.io/npm/v/accepts.svg[m
[32m+[m[32m[npm-url]: https://npmjs.org/package/accepts[m
[32m+[m[32m[node-version-image]: https://img.shields.io/node/v/accepts.svg[m
[32m+[m[32m[node-version-url]: http://nodejs.org/download/[m
[32m+[m[32m[travis-image]: https://img.shields.io/travis/jshttp/accepts/master.svg[m
[32m+[m[32m[travis-url]: https://travis-ci.org/jshttp/accepts[m
[32m+[m[32m[coveralls-image]: https://img.shields.io/coveralls/jshttp/accepts/master.svg[m
[32m+[m[32m[coveralls-url]: https://coveralls.io/r/jshttp/accepts[m
[32m+[m[32m[downloads-image]: https://img.shields.io/npm/dm/accepts.svg[m
[32m+[m[32m[downloads-url]: https://npmjs.org/package/accepts[m
[1mdiff --git a/node_modules/accepts/index.js b/node_modules/accepts/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e80192a[m
[1m--- /dev/null[m
[1m+++ b/node_modules/accepts/index.js[m
[36m@@ -0,0 +1,231 @@[m
[32m+[m[32m/*![m
[32m+[m[32m * accepts[m
[32m+[m[32m * Copyright(c) 2014 Jonathan Ong[m
[32m+[m[32m * Copyright(c) 2015 Douglas Christopher Wilson[m
[32m+[m[32m * MIT Licensed[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Module dependencies.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mvar Negotiator = require('negotiator')[m
[32m+[m[32mvar mime = require('mime-types')[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Module exports.[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = Accepts[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create a new Accepts object for the given req.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {object} req[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction Accepts(req) {[m
[32m+[m[32m  if (!(this instanceof Accepts))[m
[32m+[m[32m    return new Accepts(req)[m
[32m+[m
[32m+[m[32m  this.headers = req.headers[m
[32m+[m[32m  this.negotiator = new Negotiator(req)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Check if the given `type(s)` is acceptable, returning[m
[32m+[m[32m * the best match when true, otherwise `undefined`, in which[m
[32m+[m[32m * case you should respond with 406 "Not Acceptable".[m
[32m+[m[32m *[m
[32m+[m[32m * The `type` value may be a single mime type string[m
[32m+[m[32m * such as "application/json", the extension name[m
[32m+[m[32m * such as "json" or an array `["json", "html", "text/plain"]`. When a list[m
[32m+[m[32m * or array is given the _best_ match, if any is returned.[m
[32m+[m[32m *[m
[32m+[m[32m * Examples:[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/html[m
[32m+[m[32m *     this.types('html');[m
[32m+[m[32m *     // => "html"[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*, application/json[m
[32m+[m[32m *     this.types('html');[m
[32m+[m[32m *     // => "html"[m
[32m+[m[32m *     this.types('text/html');[m
[32m+[m[32m *     // => "text/html"[m
[32m+[m[32m *     this.types('json', 'text');[m
[32m+[m[32m *     // => "json"[m
[32m+[m[32m *     this.types('application/json');[m
[32m+[m[32m *     // => "application/json"[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*, application/json[m
[32m+[m[32m *     this.types('image/png');[m
[32m+[m[32m *     this.types('png');[m
[32m+[m[32m *     // => undefined[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*;q=.5, application/json[m
[32m+[m[32m *     this.types(['html', 'json']);[m
[32m+[m[32m *     this.types('html', 'json');[m
[32m+[m[32m *     // => "json"[m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} types...[m
[32m+[m[32m * @return {String|Array|Boolean}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.type =[m
[32m+[m[32mAccepts.prototype.types = function (types_) {[m
[32m+[m[32m  var types = types_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (types && !Array.isArray(types)) {[m
[32m+[m[32m    types = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < types.length; i++) {[m
[32m+[m[32m      types[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no types, return all requested types[m
[32m+[m[32m  if (!types || types.length === 0) {[m
[32m+[m[32m    return this.negotiator.mediaTypes()[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!this.headers.accept) return types[0];[m
[32m+[m[32m  var mimes = types.map(extToMime);[m
[32m+[m[32m  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));[m
[32m+[m[32m  var first = accepts[0];[m
[32m+[m[32m  if (!first) return false;[m
[32m+[m[32m  return types[mimes.indexOf(first)];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Return accepted encodings or best fit based on `encodings`.[m
[32m+[m[32m *[m
[32m+[m[32m * Given `Accept-Encoding: gzip, deflate`[m
[32m+[m[32m * an array sorted by quality is returned:[m
[32m+[m[32m *[m
[32m+[m[32m *     ['gzip', 'deflate'][m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} encodings...[m
[32m+[m[32m * @return {String|Array}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.encoding =[m
[32m+[m[32mAccepts.prototype.encodings = function (encodings_) {[m
[32m+[m[32m  var encodings = encodings_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (encodings && !Array.isArray(encodings)) {[m
[32m+[m[32m    encodings = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < encodings.length; i++) {[m
[32m+[m[32m      encodings[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no encodings, return all requested encodings[m
[32m+[m[32m  if (!encodings || encodings.length === 0) {[m
[32m+[m[32m    return this.negotiator.encodings()[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return this.negotiator.encodings(encodings)[0] || false[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Return accepted charsets or best fit based on `charsets`.[m
[32m+[m[32m *[m
[32m+[m[32m * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`[m
[32m+[m[32m * an array sorted by quality is returned:[m
[32m+[m[32m *[m
[32m+[m[32m *     ['utf-8', 'utf-7', 'iso-8859-1'][m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} charsets...[m
[32m+[m[32m * @return {String|Array}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.charset =[m
[32m+[m[32mAccepts.prototype.charsets = function (charsets_) {[m
[32m+[m[32m  var charsets = charsets_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (charsets && !Array.isArray(charsets)) {[m
[32m+[m[32m    charsets = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < charsets.length; i++) {[m
[32m+[m[32m      charsets[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no charsets, return all requested charsets[m
[32m+[m[32m  if (!charsets || charsets.length === 0) {[m
[32m+[m[32m    return this.negotiator.charsets()[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return this.negotiator.charsets(charsets)[0] || false[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Return accepted languages or best fit based on `langs`.[m
[32m+[m[32m *[m
[32m+[m[32m * Given `Accept-Language: en;q=0.8, es, pt`[m
[32m+[m[32m * an array sorted by quality is returned:[m
[32m+[m[32m *[m
[32m+[m[32m *     ['es', 'pt', 'en'][m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} langs...[m
[32m+[m[32m * @return {Array|String}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.lang =[m
[32m+[m[32mAccepts.prototype.langs =[m
[32m+[m[32mAccepts.prototype.language =[m
[32m+[m[32mAccepts.prototype.languages = function (languages_) {[m
[32m+[m[32m  var languages = languages_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (languages && !Array.isArray(languages)) {[m
[32m+[m[32m    languages = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < languages.length; i++) {[m
[32m+[m[32m      languages[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no languages, return all requested languages[m
[32m+[m[32m  if (!languages || languages.length === 0) {[m
[32m+[m[32m    return this.negotiator.languages()[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return this.negotiator.languages(languages)[0] || false[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Convert extnames to mime.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {String} type[m
[32m+[m[32m * @return {String}[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction extToMime(type) {[m
[32m+[m[32m  return type.indexOf('/') === -1[m
[32m+[m[32m    ? mime.lookup(type)[m
[32m+[m[32m    : type[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Check if mime is valid.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {String} type[m
[32m+[m[32m * @return {String}[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction validMime(type) {[m
[32m+[m[32m  return typeof type === 'string';[m
[32m+[m[32m}[m
[1mdiff --git a/node_modules/accepts/package.json b/node_modules/accepts/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..f85d2ed[m
[1m--- /dev/null[m
[1m+++ b/node_modules/accepts/package.json[m
[36m@@ -0,0 +1,123 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "_args": [[m
[32m+[m[32m  